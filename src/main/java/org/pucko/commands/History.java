package org.pucko.commands;

import org.pucko.core.InputHandler;
import org.pucko.core.OutputHandler;
import org.pucko.core.WorkingDirectory;

import java.util.ArrayList;

/**
 * Created by Tobias on 20/09/16.
 */
public class History extends Command {


    /**
     * @param args             Arguments used during execution of command.
     * @param workingDirectory The working directory in which the command should execute.
     * @param outputHandler    Where the output generated by the command should be sent.
     * @param errorHandler     Where the errors generated by the should be sent.
     */
    public History(ArrayList<String> args, WorkingDirectory workingDirectory, OutputHandler outputHandler, OutputHandler errorHandler, InputHandler inputHandler) {
        super(args, workingDirectory, outputHandler, errorHandler, inputHandler);
    }

    @Override
    protected boolean execute() {
        return false;
    }
    //plocka int frÃ¥n getArg(1) och skicka in i inputHandler.getHistory().get(int) och skicka det till outputHandler.

    @Override
    protected boolean verifyExecutable() {

        if (getArgs().size() > 1) {

            int commandNumber = Integer.parseInt(getArg(1));

            if (commandNumber > getInputHandler().getHistory().size()) {
                error("Number greater than command history");
                return false;
            }


            if (commandNumber < 1) {
                return false;
            }
        }
        return true;
    }

    //Kontroll av input i args, om invalid klass return false, else return true

    @Override
    protected boolean undo() {
        return false;
    }

    @Override
    protected boolean verifyUndoable() {
        return false;
    }


}
